// Code generated by MockGen. DO NOT EDIT.
// Source: ./src/api/repositories/transactions_repository.go

// Package repositories is a generated GoMock package.
package repositories

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	models "github.com/grosinov/transactions-api/src/api/models"
)

type MockTransactionsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionsRepositoryMockRecorder
}

// MockTransactionsRepositoryMockRecorder is the mock recorder for MockTransactionsRepository.
type MockTransactionsRepositoryMockRecorder struct {
	mock *MockTransactionsRepository
}

// NewMockTransactionsRepository creates a new mock instance.
func NewMockTransactionsRepository(ctrl *gomock.Controller) *MockTransactionsRepository {
	mock := &MockTransactionsRepository{ctrl: ctrl}
	mock.recorder = &MockTransactionsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransactionsRepository) EXPECT() *MockTransactionsRepositoryMockRecorder {
	return m.recorder
}

// BulkCreateTransactions mocks base method.
func (m *MockTransactionsRepository) BulkCreateTransactions(arg0 *[]models.Transaction) (*[]models.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkCreateTransactions", arg0)
	ret0, _ := ret[0].(*[]models.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BulkCreateTransactions indicates an expected call of BulkCreateTransactions.
func (mr *MockTransactionsRepositoryMockRecorder) BulkCreateTransactions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkCreateTransactions", reflect.TypeOf((*MockTransactionsRepository)(nil).BulkCreateTransactions), arg0)
}

// GetTransactions mocks base method.
func (m *MockTransactionsRepository) GetTransactions(userId uint64, from, to *time.Time) (*[]models.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransactions", userId, from, to)
	ret0, _ := ret[0].(*[]models.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransactions indicates an expected call of GetTransactions.
func (mr *MockTransactionsRepositoryMockRecorder) GetTransactions(userId, from, to interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransactions", reflect.TypeOf((*MockTransactionsRepository)(nil).GetTransactions), userId, from, to)
}
